import ftn.sbzn.PoEhelperbackend.model.Tag;
import ftn.sbzn.PoEhelperbackend.model.Build;
import java.util.Set;
import ftn.sbzn.PoEhelperbackend.model.Mods;
import ftn.sbzn.PoEhelperbackend.model.ModList;
import ftn.sbzn.PoEhelperbackend.model.Mod;
import ftn.sbzn.PoEhelperbackend.model.ItemRecommendations;


rule "Elemental pref shield"
agenda-group "build"
salience 15
when
    $mods: Mods()
    $hmods: ModList() from $mods.shieldMods
	Tag( name == "Elemental" )
	$ir: ItemRecommendations(offHandSelected == true, $currentMods: shieldMods)
	$curr: ModList(prefixes.size() < 3) from $currentMods
	$b: Build()
then
//    System.out.println("test");
    $curr.prefixes.add($hmods.findRandomPrefWithTag("Elemental", $curr, $b));
    update($ir)
end

rule "Elemental suf shield"
agenda-group "build"
salience 15
when
    $mods: Mods()
    $hmods: ModList() from $mods.shieldMods
	Tag( name == "Elemental" )
	$ir: ItemRecommendations(offHandSelected == true, $currentMods: shieldMods)
	$curr: ModList(suffixes.size() < 3) from $currentMods
	$b: Build()
then
//    System.out.println("test");
    $curr.suffixes.add($hmods.findRandomSufWithTag("Elemental", $curr, $b));
    update($ir)
end

rule "Critical suf shield"
agenda-group "build"
salience 15
when
    $mods: Mods()
    $hmods: ModList() from $mods.shieldMods
	Tag( name == "Critical" )
	$ir: ItemRecommendations(offHandSelected == true, $currentMods: shieldMods)
	$curr: ModList(suffixes.size() < 3) from $currentMods
	$b: Build()
then
//    System.out.println("test");
    $curr.suffixes.add($hmods.findRandomSufWithTag("Critical", $curr, $b));
    update($ir);

end

rule "Defences pref shield"
agenda-group "build"
salience 20
when
    $mods: Mods()
    $hmods: ModList() from $mods.shieldMods
	Tag( name == "Defences" )
	$ir: ItemRecommendations(offHandSelected == true, $currentMods: shieldMods)
	$curr: ModList(prefixes.size() < 3) from $currentMods
	$b: Build()
then
//    System.out.println("test");
    $curr.prefixes.add($hmods.findRandomPrefWithTag("Defences", $curr, $b));
    update($ir)
end

rule "fire suf shield"
agenda-group "build"
salience 10
when
    $mods: Mods()
    $hmods: ModList() from $mods.shieldMods
	Tag( name == "Fire" )
	$ir: ItemRecommendations(offHandSelected == true, $currentMods: shieldMods)
	$curr: ModList(suffixes.size() < 3) from $currentMods
	$b: Build()
then
//    System.out.println("test");
    $curr.suffixes.add($hmods.findRandomSufWithTag("Fire", $curr, $b));
    update($ir);

end
